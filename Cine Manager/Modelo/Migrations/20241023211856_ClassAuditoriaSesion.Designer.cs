// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modelo.EFCore;

#nullable disable

namespace Modelo.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20241023211856_ClassAuditoriaSesion")]
    partial class ClassAuditoriaSesion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ActorPelicula", b =>
                {
                    b.Property<int>("ListaPeliculasPeliculaId")
                        .HasColumnType("int");

                    b.Property<int>("RepartoActorId")
                        .HasColumnType("int");

                    b.HasKey("ListaPeliculasPeliculaId", "RepartoActorId");

                    b.HasIndex("RepartoActorId");

                    b.ToTable("Actores_Peliculas", (string)null);
                });

            modelBuilder.Entity("ComponenteGrupo", b =>
                {
                    b.Property<int>("ComponentesId")
                        .HasColumnType("int");

                    b.Property<int>("GruposId")
                        .HasColumnType("int");

                    b.HasKey("ComponentesId", "GruposId");

                    b.HasIndex("GruposId");

                    b.ToTable("ComponenteGrupo");
                });

            modelBuilder.Entity("ComponenteUsuario", b =>
                {
                    b.Property<int>("ComponentesId")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosUsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ComponentesId", "UsuariosUsuarioId");

                    b.HasIndex("UsuariosUsuarioId");

                    b.ToTable("ComponenteUsuario");
                });

            modelBuilder.Entity("Modelo.Entidades.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActorId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorId");

                    b.ToTable("Actores");
                });

            modelBuilder.Entity("Modelo.Entidades.Auditoria", b =>
                {
                    b.Property<int>("AuditoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditoriaId"), 1L, 1);

                    b.Property<string>("Apellido_Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo_Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Aud")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre_Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoMovimiento_Aud")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Usuario_AudId")
                        .HasColumnType("int");

                    b.HasKey("AuditoriaId");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("Modelo.Entidades.AuditoriaSesion", b =>
                {
                    b.Property<int>("AuditoriaSesionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditoriaSesionId"), 1L, 1);

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("AuditoriaSesionId");

                    b.ToTable("AuditoriasSesiones");
                });

            modelBuilder.Entity("Modelo.Entidades.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Modelo.Entidades.DetalleOrdenCompra", b =>
                {
                    b.Property<int>("DetalleOrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleOrdenCompraId"), 1L, 1);

                    b.Property<int>("CantidadEntregada")
                        .HasColumnType("int");

                    b.Property<int>("CantidadOrdenada")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("OrdenCompraId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DetalleOrdenCompraId");

                    b.HasIndex("OrdenCompraId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("DetallesOrdenesCompra");
                });

            modelBuilder.Entity("Modelo.Entidades.DetallePedido", b =>
                {
                    b.Property<int>("DetallePedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetallePedidoId"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DetallePedidoId");

                    b.HasIndex("PedidoId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("DetallesPedidos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DetallePedido");
                });

            modelBuilder.Entity("Modelo.Entidades.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DirectorId");

                    b.ToTable("Directores");
                });

            modelBuilder.Entity("Modelo.Entidades.GeneroCinematografico", b =>
                {
                    b.Property<int>("GeneroCinematograficoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroCinematograficoId"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroCinematograficoId");

                    b.ToTable("GenerosCinematograficos");
                });

            modelBuilder.Entity("Modelo.Entidades.MetodoPago", b =>
                {
                    b.Property<int>("MetodoPagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetodoPagoId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MetodoPagoId");

                    b.ToTable("MetodosPago");
                });

            modelBuilder.Entity("Modelo.Entidades.OrdenCompra", b =>
                {
                    b.Property<int>("OrdenCompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenCompraId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaOrden")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrdenCompraId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("OrdenesCompra");
                });

            modelBuilder.Entity("Modelo.Entidades.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Recargo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Modelo.Entidades.Pelicula", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeliculaId"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroCinematograficoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Precio")
                        .HasColumnType("int");

                    b.HasKey("PeliculaId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("GeneroCinematograficoId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("Modelo.Entidades.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProveedorId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Cuit")
                        .HasColumnType("bigint");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Componente");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Componente");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.EstadoGrupo", b =>
                {
                    b.Property<int>("EstadoGrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoGrupoId"), 1L, 1);

                    b.Property<string>("EstadoGrupoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoGrupoId");

                    b.ToTable("EstadosGrupo");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.EstadoUsuario", b =>
                {
                    b.Property<int>("EstadoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoUsuarioId"), 1L, 1);

                    b.Property<string>("EstadoUsuarioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoUsuarioId");

                    b.ToTable("EstadosUsuario");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Formulario", b =>
                {
                    b.Property<int>("FormularioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormularioId"), 1L, 1);

                    b.Property<int>("ModuloId")
                        .HasColumnType("int");

                    b.Property<string>("NombreFormulario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormularioId");

                    b.HasIndex("ModuloId");

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Modulo", b =>
                {
                    b.Property<int>("ModuloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuloId"), 1L, 1);

                    b.Property<string>("NombreModulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuloId");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("EstadoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PagoPedido", b =>
                {
                    b.Property<int>("PagoPedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PagoPedidoId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("PagoPedidoId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PagosPedidos");
                });

            modelBuilder.Entity("PeliculaProveedor", b =>
                {
                    b.Property<int>("PeliculasPeliculaId")
                        .HasColumnType("int");

                    b.Property<int>("ProveedoresProveedorId")
                        .HasColumnType("int");

                    b.HasKey("PeliculasPeliculaId", "ProveedoresProveedorId");

                    b.HasIndex("ProveedoresProveedorId");

                    b.ToTable("Proveedores_Peliculas", (string)null);
                });

            modelBuilder.Entity("Modelo.Entidades.DetalleAlquiler", b =>
                {
                    b.HasBaseType("Modelo.Entidades.DetallePedido");

                    b.Property<int>("DetalleAlquilerId")
                        .HasColumnType("int");

                    b.Property<bool>("Devuelto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("DetalleAlquiler");
                });

            modelBuilder.Entity("Modelo.Entidades.DetalleVenta", b =>
                {
                    b.HasBaseType("Modelo.Entidades.DetallePedido");

                    b.Property<int>("DetalleVentaId")
                        .HasColumnType("int");

                    b.Property<bool>("Garantia")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("DetalleVenta");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Accion", b =>
                {
                    b.HasBaseType("Modelo.Módulo_de_Seguridad.Componente");

                    b.Property<int>("FormularioId")
                        .HasColumnType("int");

                    b.HasIndex("FormularioId");

                    b.HasDiscriminator().HasValue("Accion");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Grupo", b =>
                {
                    b.HasBaseType("Modelo.Módulo_de_Seguridad.Componente");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionGrupo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoGrupoId")
                        .HasColumnType("int");

                    b.HasIndex("EstadoGrupoId");

                    b.HasDiscriminator().HasValue("Grupo");
                });

            modelBuilder.Entity("ActorPelicula", b =>
                {
                    b.HasOne("Modelo.Entidades.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("ListaPeliculasPeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Actor", null)
                        .WithMany()
                        .HasForeignKey("RepartoActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComponenteGrupo", b =>
                {
                    b.HasOne("Modelo.Módulo_de_Seguridad.Componente", null)
                        .WithMany()
                        .HasForeignKey("ComponentesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Modelo.Módulo_de_Seguridad.Grupo", null)
                        .WithMany()
                        .HasForeignKey("GruposId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ComponenteUsuario", b =>
                {
                    b.HasOne("Modelo.Módulo_de_Seguridad.Componente", null)
                        .WithMany()
                        .HasForeignKey("ComponentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Módulo_de_Seguridad.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Modelo.Entidades.DetalleOrdenCompra", b =>
                {
                    b.HasOne("Modelo.Entidades.OrdenCompra", "OrdenCompra")
                        .WithMany("DetallesOrdenesCompra")
                        .HasForeignKey("OrdenCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdenCompra");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("Modelo.Entidades.DetallePedido", b =>
                {
                    b.HasOne("Modelo.Entidades.Pedido", "Pedido")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Pelicula", "Pelicula")
                        .WithMany()
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("Modelo.Entidades.OrdenCompra", b =>
                {
                    b.HasOne("Modelo.Entidades.Proveedor", "Proveedor")
                        .WithMany("OrdenesCompra")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Modelo.Entidades.Pedido", b =>
                {
                    b.HasOne("Modelo.Entidades.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelo.Entidades.Pelicula", b =>
                {
                    b.HasOne("Modelo.Entidades.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.GeneroCinematografico", "GeneroCinematografico")
                        .WithMany()
                        .HasForeignKey("GeneroCinematograficoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Director");

                    b.Navigation("GeneroCinematografico");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Formulario", b =>
                {
                    b.HasOne("Modelo.Módulo_de_Seguridad.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Usuario", b =>
                {
                    b.HasOne("Modelo.Módulo_de_Seguridad.EstadoUsuario", "EstadoUsuario")
                        .WithMany()
                        .HasForeignKey("EstadoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoUsuario");
                });

            modelBuilder.Entity("PagoPedido", b =>
                {
                    b.HasOne("Modelo.Entidades.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetodoPago");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("PeliculaProveedor", b =>
                {
                    b.HasOne("Modelo.Entidades.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("PeliculasPeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Entidades.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("ProveedoresProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Accion", b =>
                {
                    b.HasOne("Modelo.Módulo_de_Seguridad.Formulario", "Formulario")
                        .WithMany("AccionesPosibles")
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Grupo", b =>
                {
                    b.HasOne("Modelo.Módulo_de_Seguridad.EstadoGrupo", "EstadoGrupo")
                        .WithMany()
                        .HasForeignKey("EstadoGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoGrupo");
                });

            modelBuilder.Entity("Modelo.Entidades.OrdenCompra", b =>
                {
                    b.Navigation("DetallesOrdenesCompra");
                });

            modelBuilder.Entity("Modelo.Entidades.Pedido", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("Modelo.Entidades.Proveedor", b =>
                {
                    b.Navigation("OrdenesCompra");
                });

            modelBuilder.Entity("Modelo.Módulo_de_Seguridad.Formulario", b =>
                {
                    b.Navigation("AccionesPosibles");
                });
#pragma warning restore 612, 618
        }
    }
}
